---
- name: Upload and execute ISMS scripts on each pod
  hosts: localhost
  vars:
    namespace: thm-app
      #localhost_path: "/home/root/isms"
    localhost_path: "/root/2024.07.isms-ansible/ansible/isms"
    remote_path: "/tmp"
    script_name: "isms-a.sh"
    
  tasks:
    - name: Get all deployments in the namespace
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ namespace }}"
      register: deployments

    - name: Get pods for each deployment
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - "app={{ item.metadata.name }}"
      register: pods
      loop: "{{ deployments.resources }}"  #1 
      loop_control:
        label: "{{ item.metadata.name }}"

#    - name: Collect pod info 
#      set_fact:
#        #pod_names: "{{ pod_names | default([]) + [item.metadata.name] }}"
#        pod_list: "{{ pod_list | default([]) + [{'name': item.metadata.name, 'app_label': item.metadata.labels.app}] }}"
#      loop: "{{ pods.results | map(attribute='resources') | flatten(levels=1) }}"
#      loop_control:
#        label: "{{ item.metadata.name }}"

    - name: Collect first pod info from each deployment
      set_fact:
        pod_list : "{{ pod_list | default([]) + [{'name': item.resources[0].metadata.name, 'app_label': item.resources[0].metadata.labels.app}] }}"
      when: item.resources | length > 0
      loop: "{{ pods.results }}"
      loop_control:
        label: "{{ item.resources[0].metadata.name if item.resources | length > 0 else 'no-pods' }}"

    - name: Display collected pod names
      ansible.builtin.debug:
        msg: "Pod name: {{ item.name }}"
      loop: "{{ pod_list }}"

    - name: Upload script to the first pod of each deployment
      kubernetes.core.k8s_cp:
        namespace: "{{ namespace }}"
        pod: "{{ item.name }}"
        container: "{{ item.app_label }}"
        remote_path: "{{ remote_path }}"
        local_path: "{{ localhost_path }}"
        no_preserve: True
        state: to_pod
      loop: "{{ pod_list }}"

    - name: Execute script on pods
      kubernetes.core.k8s_exec:
        namespace: "{{ namespace }}"
        pod: "{{ item.name }}"
        container: "{{ item.app_label }}"
          #command: ["sh", "-c", "sh {{ remote_path }}/{{ script_name }}"]
        command: "sh {{ remote_path }}/isms/{{ script_name }}" 
      loop: "{{ pod_list }}"

    - name: Upload script to the first pod of each deployment
      kubernetes.core.k8s_cp:
        namespace: "{{ namespace }}"
        pod: "{{ item.name }}"
        container: "{{ item.app_label }}"
        remote_path: "{{ remote_path }}/result"
        local_path: "{{ localhost_path }}/result"
        no_preserve: True
        state: from_pod
      loop: "{{ pod_list }}"
